{
	"name": "Capacity Tracker Ingestion",
	"properties": {
		"activities": [
			{
				"name": "Get secret",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"method": "GET",
					"url": {
						"value": "@concat(\n    'https://dapalpha-kv-'\n    , replace(pipeline().DataFactory, 'dapalpha-adf-data-', ''),\n    '.vault.azure.net/secrets/CAPACITY-TRACKER-API-KEY?api-version=7.4'\n)",
						"type": "Expression"
					},
					"connectVia": {
						"referenceName": "DAPAlpha-IR",
						"type": "IntegrationRuntimeReference"
					},
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net/"
					}
				}
			},
			{
				"name": "Set secret",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": true,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "CAPACITY-TRACKER-API-KEY",
					"value": {
						"value": "@activity('Get secret').output.value",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Get number of rows",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set secret",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": true
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "HttpReadSettings",
							"requestMethod": "GET"
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "Json_Generic_CT_API",
						"type": "DatasetReference",
						"parameters": {
							"RelativeURL": {
								"value": "@concat(     'v4.8/?key=', variables('CAPACITY-TRACKER-API-KEY') )",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "Set RecordCount",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get number of rows",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RecordCount",
					"value": {
						"value": "@int(activity('Get number of rows').output.firstRow.totalItems)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Initialise RecordOffset",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set RecordCount",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RecordOffset",
					"value": 0
				}
			},
			{
				"name": "Web to Lake iterate",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Initialise RecordOffset",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(variables('RecordOffset'),variables('RecordCount'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Web to lake",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "Json_Generic_CT_API",
									"type": "DatasetReference",
									"parameters": {
										"RelativeURL": {
											"value": "@concat(     'v4.8/?key=', variables('CAPACITY-TRACKER-API-KEY'), '&limit=10000','&offset=',variables('RecordOffset') )",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Json_Datalake",
									"type": "DatasetReference",
									"parameters": {
										"container": "raw",
										"filepath": "Capacity_Tracker/Generic",
										"filename": {
											"value": "@concat('offset_',variables('RecordOffset'), '.json')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Update RecordOffset temp",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Web to lake",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "RecordOffsetTemp",
								"value": {
									"value": "@variables('RecordOffset')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Update RecordOffset",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Update RecordOffset temp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "RecordOffset",
								"value": {
									"value": "@add(variables('RecordOffsetTemp'),10000)",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			}
		],
		"variables": {
			"RecordCount": {
				"type": "Integer"
			},
			"CAPACITY-TRACKER-API-KEY": {
				"type": "String"
			},
			"RecordOffset": {
				"type": "Integer"
			},
			"RecordOffsetTemp": {
				"type": "Integer"
			}
		},
		"folder": {
			"name": "Capacity Tracker"
		},
		"annotations": []
	}
}